<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>testes unitários on Jucelio Floresta</title><link>https://jucelio.dev/pt-br/tags/testes-unit%C3%A1rios/</link><description>Recent content in testes unitários on Jucelio Floresta</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 01 Sep 2021 22:00:03 +0000</lastBuildDate><atom:link href="https://jucelio.dev/pt-br/tags/testes-unit%C3%A1rios/index.xml" rel="self" type="application/rss+xml"/><item><title>Como escrever testes unitários na linguagem de programação Go?</title><link>https://jucelio.dev/pt-br/publicacoes/como-escrever-testes-unitarios-em-golang/</link><pubDate>Wed, 01 Sep 2021 22:00:03 +0000</pubDate><guid>https://jucelio.dev/pt-br/publicacoes/como-escrever-testes-unitarios-em-golang/</guid><description>Por que você deveria escrever testes? Programar não é uma tarefa fácil, escrever testes também não, mas parte do processo de desenvolvimento de software é escrever testes. Os testes do nosso código são uma boa maneira de garantir a qualidade e melhorar a confiabilidade, Introducing Go, 2016. Quando falamos em testes, estamos nos referindo implicitamente a testes automatizados, é a prática de escrever pequenos programas que verificam se o código se comporta conforme o esperado para determinadas entradas, The Go Programming Language, 2016.</description></item></channel></rss>