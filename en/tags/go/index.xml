<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Go on Jucelio Floresta</title><link>https://jucelio.dev/en/tags/go/</link><description>Recent content in Go on Jucelio Floresta</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Wed, 01 Sep 2021 22:00:03 +0000</lastBuildDate><atom:link href="https://jucelio.dev/en/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>How to write unit tests in the Go programming language?</title><link>https://jucelio.dev/en/posts/how-to-write-unit-tests-in-golang/</link><pubDate>Wed, 01 Sep 2021 22:00:03 +0000</pubDate><guid>https://jucelio.dev/en/posts/how-to-write-unit-tests-in-golang/</guid><description>Why should you write tests? Programming is not an easy task, write test is neither, but part of the software development process is writing tests. Testing our code is a good way to ensure quality and improve reliability, Introducing Go, 2016. When we talk about testing, we&amp;rsquo;re implicitly referring to automated testing, it&amp;rsquo;s the practice of writing small programs that check that code behaves as expected for defined entries, The Go Programming Language, 2016]book-the-go-programming-language.</description></item></channel></rss>